{
  "name": "fs-readfile-promise",
  "version": "1.1.0",
  "description": "Promise version of fs.readFile",
  "repository": {
    "type": "git",
    "url": "git://github.com/shinnn/fs-readfile-promise"
  },
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "scripts": {
    "pretest": "jscs *.js && eslint *.js",
    "test": "node test.js | tap-spec",
    "coverage": "istanbul cover test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shinnn/fs-readfile-promise/blob/master/LICENSE"
    }
  ],
  "files": [
    "index.js",
    "LICENSE"
  ],
  "keywords": [
    "fs",
    "read",
    "file",
    "promise",
    "promises",
    "then",
    "thenable"
  ],
  "dependencies": {
    "es6-promise": "^2.0.0",
    "graceful-fs": "^3.0.5"
  },
  "devDependencies": {
    "eslint": "^0.10.1",
    "istanbul": "^0.3.4",
    "istanbul-coveralls": "^1.0.1",
    "jscs": "^1.8.1",
    "tap-spec": "^2.1.1",
    "tape": "^3.0.3"
  },
  "jscsConfig": {
    "preset": "google",
    "maximumLineLength": 98
  },
  "readme": "# fs-readfile-promise \n\n[![Build Status](https://travis-ci.org/shinnn/fs-readfile-promise.svg?branch=master)](https://travis-ci.org/shinnn/fs-readfile-promise)\n[![Build status](https://ci.appveyor.com/api/projects/status/5sacvq0w9x7mwkwd)](https://ci.appveyor.com/project/ShinnosukeWatanabe/fs-readfile-promise)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/fs-readfile-promise.svg)](https://coveralls.io/r/shinnn/fs-readfile-promise)\n[![Dependency Status](https://david-dm.org/shinnn/fs-readfile-promise.svg)](https://david-dm.org/shinnn/fs-readfile-promise)\n[![devDependency Status](https://david-dm.org/shinnn/fs-readfile-promise/dev-status.svg)](https://david-dm.org/shinnn/fs-readfile-promise#info=devDependencies)\n\n[Promises/A+][promise] version of [`fs.readFile`][fsreadfile]\n\n```javascript\nvar readFile = require('fs-readfile-promise');\n\nreadFile('path/to/file')\n.then(function(buffer) {\n  console.log(buffer.toString());\n})\n.catch(function(err) {\n  console.log(err.message);\n});\n```\n\nBased on the principle of [*modular programming*](http://en.wikipedia.org/wiki/Modular_programming), this module has only one functionality [`readFile`][fsreadfile], unlike other file system modules using promises. If you want to use a bunch of other [`fs`](http://nodejs.org/api/fs.html) methods in the promises' way, choose other modules such as [q-io](https://github.com/kriskowal/q-io) and [fs-promise](https://github.com/kevinbeaty/fs-promise).\n\n## Installation\n\n[![NPM version](https://badge.fury.io/js/fs-readfile-promise.svg)](http://badge.fury.io/js/fs-readfile-promise)\n\n[Install with npm](https://www.npmjs.org/doc/cli/npm-install.html). (Make sure you have installed [Node](http://nodejs.org/))\n\n```\nnpm install --save fs-readfile-promise\n```\n\n## API\n\n```javascript\nvar readFile = require('fs-readfile-promise');\n```\n\n### readFile(*filename* [, *options*])\n\n*filename*: `String`  \n*options*: `Object` or `String` (same as [fs.readFile][fsreadfile])  \nReturn: `Object` ([Promise][promise])\n\nWhen it finish reading the file, it will be [*fulfilled*](http://promisesaplus.com/#point-26) with an [`Buffer`](http://nodejs.org/api/buffer.html#buffer_buffer) of the file as its first argument.\n\nWhen it fails to read the file, it will be [*rejected*](http://promisesaplus.com/#point-30) with an error as its first argument.\n\n```javascript\nvar readFile = require('fs-readfile-promise');\n\nvar onFulfilled = function(buffer) {\n  console.log(buffer.toString());\n};\n\nvar onRejected = function(err) {\n  console.log('Cannot read the file.');\n};\n\nreadFile('path/to/file').then(onFulfilled, onRejected);\n```\n\n## License\n\nCopyright (c) 2014 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n\n[fsreadfile]: http://nodejs.org/api/fs.html#fs_fs_readfile_filename_options_callback\n[promise]: http://promisesaplus.com/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shinnn/fs-readfile-promise/issues"
  },
  "_id": "fs-readfile-promise@1.1.0",
  "_from": "fs-readfile-promise@^1.1.0"
}
